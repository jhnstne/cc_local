.TH patch 3

.SH NAME
patch

.SH SYNOPSIS
Interface module for triangular Bezier surface patches.

.SH SYNTAX

.B #include "patch.h"

.SH DESCRIPTION:

.nf
.B Patch PatchCreate( degree, range, normaldim)
.B int degree;
.B Space range;
.B int normaldim;
.fi

Return a new triangular Bezier patch of the given degree.
If normals are associated with the patch, normaldim
should be 3, otherwise it should be 0.


.nf
.B void PatchFree(patch)
.B Patch;
.fi

Free the storage associated with a patch.


.nf
.B "void PatchEvalWithNormal( patch, point, normal, r, s, t)"
.B Patch patch;
.B Point *point;
.B Normal *normal;
.B Scalar r, s, t;
.fi

Evaluate the patch at the point whose barycentric coordinates are (r, s, t)
Also computed is the normal vector to the surface at the point.


.nf
.B Point PatchEval( patch, r, s, t)
.B Patch patch;
.B Scalar r, s, t;
.fi

Evaluate the patch at the point whose barycentric coordinates are (r, s, t).

.nf
.B "void PatchSetPoint( patch, pt, i1, i2, i3)"
.B Patch *patch;
.B Point pt;
.B int i1, i2, i3;
.fi

Set the vertex whose multi-index is (i1,i2,i3) to pt.
    
.nf
.B "void PatchSetNormal( patch, normal, i1, i2, i3)"
.B Patch *patch;
.B Normal normal;
.B int i1, i2, i3;
.fi

Set the normal of the vertex whose multi-index is (i1,i2,i3) to normal.

.nf
.B Point PatchGetPoint( p, i1, i2, i3)
.B Patch p;
.B int i1, i2, i3;
.fi

Return the position of the control point whose multi-index is (i1,i2,i3).

.nf
.B Point PatchSafeGetPoint( p, i1, i2, i3)
.B Patch p;
.B int i1, i2, i3;
.fi

If the index is valid, return the position of the control point whose
multi-index is (i1,i2,i3).  Otherwise, return the origin of the
standard frame.  Useful for certain sums that look at invalid points
but give them a weight of zero.


.nf
.B Normal PatchGetNormal( p, i1, i2, i3)
.B Patch p;
.B int i1, i2, i3;

Return the normal of the control point whose multi-index is (i1,i2,i3);

.nf
.B VERTEX PatchGetVertex( p, i1, i2, i3)
.B Patch p;
.B int i1, i2, i3;
.fi

Return the vertex (a point and a normal) whose multi-index
is (i1,i2,i3).


.nf
.B int PatchRead( fp, patch, range)
.B FILE *fp;
.B Patch *patch;
.B Space range;
.fi

Read a patch from the file fp.  One is returned on success, zero
on failure.  The coordinates read in are assumed to be coordinates
relative to the standard frame of the range space.

.nf
.B int pGetPatch(ds, patch, range)
.B Lnode** ds;
.B Patch* patch;
.B Space range;
.fi

Read a patch from a dstruct.


.nf
.B void PatchWrite( fp, patch)
.B FILE *fp;
.B Patch patch;
.fi

Write the patch out on the named stream.


.nf
.B "Patch PatchSplit( p, pr, ps, pt, r, s, t)"
.B Patch p;
.B Patch *pr, *ps, *pt;
.B Scalar r, s, t;
.fi

Split (subdivide) the patch at the point whose barycentric coordinates
are (r,s,t).  The subpatches are pr, ps, and pt.


.nf
.B Patch PatchDegreeRaise(p)
.B Patch	p;
.fi

Returns a patch resulting from degree-raising p.  The new patch
will have the same dimension of normals as p, but they are not set.

.nf
.B Scalar KGauss(p, r, s, t)
.B Patch p;
.B Scalar r,s,t;
.fi

Return the Gaussian curvature of patch p at r,s,t.
  
.nf
.B Scalar KMean(p, r, s, t)
.B Patch p;
.B Scalar r,s,t;
.fi

Return the mean curvature of patch p at r,s,t.

.nf
.B Vector PatchDerivEval(p, r,s,t, Vr,Vs,Vt)
.B Patch p;
.B Scalar r,s,t;
.B Scalar Vr, Vs, Vt;
.fi

Return the first derivative of patch p at r,s,t in direction Vr,Vs,Vt.

.nf
.B Vector PatchDeriv2Eval(p, r,s,t, Vr,Vs,Vt, Wr,Ws,Wt)
.B Patch p;
.B Scalar r,s,t;
.B Scalar Vr, Vs, Vt;
.B Scalar Wr, Ws, Wt;
.fi

Return the second derivative of patch p at r,s,t in directions Vr,Vs,Vt
and Ws,Wr,Wt.

.nf
.B Scalar PatchCurvature(p, r,s,t, Vr,Vs,Vt)
.B Patch p;
.B Scalar r,s,t;
.B Scalar Vr,Vs,Vt;
.fi

Return the curvature of the patch in direction Vr,Vs,Vt.

.nf
.B Scalar PatchNormalCurvature(p, r,s,t, Vr,Vs,Vt)
.B Patch p;
.B Scalar r,s,t;
.B Scalar Vr,Vs,Vt;
.fi

Return the normal section curvature of a patch.

.nf
.B SFF PatchEvalSFF(p, r,s,t)
.B Patch p;
.B Scalar r,s,t;
.fi

Return the SFF of patch p at r,s,t.


.nf 
.B SFF PatchEvalSFF(patch, r, s, t)
.B Patch patch;
.B Scalar r,s,t;
.fi

Return the Second Fundamental Form at a point on a patch.

.SH DATE
January 5, 1992
