% Text for Eurographics 95 talk.

Swept surface
-------------

This talk is about swept surfaces,
surfaces generated by sweeping an object through space.
The object may change its size, or even its shape, during the sweep.
Swept surfaces are important to several areas of graphics and engineering.
It is one of the fundamental primitives in geometric modeling,
especially because of the prevalence of sweeping in machining,
such as lathing, milling, and ball cutting.
Also, operations such as blending can be viewed as a sweeping process.
The swept surface is useful in design, largely because
it is aesthetically pleasing.
It finds application in robotics, 
for path planning and interference detection.
And swept surfaces are related to animation, since both involve motion.

Instances of swept surface
--------------------------

The classical swept surfaces are surfaces of revolution and extruded surfaces
since the most classical motions are rotation and translation.
This captures applications such as lathing and objects such as the vase.
In these two surfaces, the object sweeps about an axis or sweeps along a line.
We are interested in sweeps along an arbitrary path,
where the object has full degrees of freedom of motion along this path.

Arbitrary sweeps
----------------

There are two main problems that you encounter when allowing arbitrary sweeps
along an arbitrary path: preserving a rational representation of the
swept surface and preserving the exact shape of the sweeping object.
It is the combination of these goals that causes us problems:
if we want a rational surface but do not need to preserve the shape
of the object during the sweep, 
then traditional tensor product interpolation of some keyframes
of the object would work.
On the other hand, if we want to preserve the exact shape of the object during
the sweep but do not need a rational representation of the surface,
then we can apply techniques such as Frenet frames or envelopes.
So it is the preservation of shape with rational surfaces
that is the challenge.

Of course, a rational representation of the surface is an advantage for 
efficiency and for compatibility with existing surfaces.
In fact, we really want an explicit Bezier or B-spline control mesh
for the surface, and this will be an emphasis of our result.
Preservation of the exact shape of the sweeping object
has obvious advantages in machining and robot motion,
where the sweeping object is fixed.
It can also be useful to guarantee the preservation of shape
in graphic design.

Our swept surface
-----------------

Now to our result.
We consider a fixed curve sweeping through space along an arbitrary path.
We construct a rational Bezier surface that interpolates n frames
of the fixed curve and preserves the exact shape and size of the curve 
throughout the sweep. 
The frames are arbitrary.
For added flexibility, we allow a variant of the construction
where the sweeping curve is allowed to change its size during the sweep,
but not its shape.

% ROBOT FIRST   (SINCE IT USES PERFECTLY FIXED CURVE)
The first example is an arbitrary sweep of a fixed curve, as in a robot path.
There is no change in size of the curve during this sweep.
The input frames are at the left, the swept surface in the middle
and the right picture shows a collection of isoparametric curves of the
surface, showing that the shape is preserved.
% CANOE
Next we see an example from design: each frame
of this canoe has a different orientation and position, and in this example
the scale of each frame is also different.
% COKE
Finally, we observe that the surface of revolution and the extruded surface
are special cases of this new construction.
But rather than rotating a profile about a curve, we interpolate a series
of circles of varying scale.

POSTPONE THE COMMENT ABOUT SHAPE-PRESERVING CURVE INTERPOLATION 
UNTIL CONCLUSIONS.

Remainder of the talk
---------------------

Previous work
-------------

There is a rich literature on swept surfaces and related topics.
The Frenet frame can be used to define a coordinate system for the sweeping
object at each point of a curve along which it is sweeping.
However, this frame is not rational and thus neither is the swept surface
it defines.
Computing the envelope of a sweeping object is a classical technique
for defining a swept surface, but it defines an implicit equation for
the swept surface, and most implicit equations do not define rational surfaces.
Coquillart and then Bloomenthal and Riesenfeld have constructed
swept surfaces by approximating offset curves of the axis of the sweep.
Special classes of swept surfaces have received attention,
such as ruled surfaces, canal surfaces, and generalized cylinders.
And ray tracing of swept surfaces has been studied by van Wijk and 
Bronsvoort and Klok.

Observations
------------

Now on to our method.
Our method starts with two simple observations.
The sweep of a rigid object involves change of only two values:
position and orientation.
Rational position interpolation is classical (and, in the variant
where size is allowed to change, so is scale interpolation).
The difficulty is orientation interpolation, namely making it rational.

The second observation is that once the sweep of each control point
of the sweep curve is fully known,
the control mesh of the swept surface follows easily.
Let's consider this second point first.

Sweeping a Bezier curve
-----------------------

Consider a polynomial Bezier curve sweeping through space.
If its ith control point follows the path on the second line
[\sum b_ij B_j(v)]
then the surface swept out by the curve is simply the tensor product
surface in the third line.
This is the classical interpretation of the column of a tensor product mesh.
That is, if you fix j, then b_ij is a column of the control mesh
and it is also the control polygon of the curve swept by the ith control point.

This argument can be extended to the sweep of a rational Bezier
along a rational Bezier: see the paper for details.

The moral is that we can concentrate on the sweep of control points.
I am not going to go into further detail on the development of 
the control mesh of the swept surface, although this is an important
component of the work.  See the paper.

Rational interpolation of orientation
-------------------------------------

Now let's talk about defining the change of orientation of the
curve during the sweep.
Recall that the difficulty is to define this rationally.

There are many repreentations for orientation,
including rotation matrices, Euler angles, and quaternions,
but unit quaternions are the superior representation,
especially for the interpolation of orientation.
They are concise; 
they do not introduce gimbal lock during interpolation.
The metrics of the quaternion sphere and the group of
rotation matrices, SO(3), are equivalent,
which means that natural paths on the quaternion sphere
lead to natural changes of orientation for an object.

A unit quaternion represents a rotation about some vector,
which is sufficient to represent the orientation of any rigid object.
Since a unit quaternion is a unit vector in 4-space,
it has a natural geometric analogue as a point on the unit sphere 
in 4-space, S^3.

This reduces our problem to defining a rational curve
on the quaternion sphere, interpolating a set of points.
Note the Bezier control polygon in the figure, indicating
that we want the Bezier representation of the curve.

Related work
------------

Dietz, Hoschek and Juttler have very interesting results on the
design of rational curves on quadrics, and we will have more to say
about this method later.
Of course, we are interested in rational curves on the 3-sphere, not the 2-sphere.
Wang designs quadratic curves on the sphere, composed of spherical
biarcs (which are great circles of the sphere meeting with C^1 continuity).
We are interested in a richer class of curves, with arbitrary continuity,
and again on the quaternion sphere.

There is a large amount of work on nonrational orientation curves,
starting with the seminal publication of Shoemake in 1985,
all the way to results at SIGGRAPH just this summer by Kim et. al.
However, we are interested in rational curves so that we may design 
rational swept surfaces.

Finally, rational motions have been developed by Juttler, using
dual quaternions to interpolate spatial displacements.
Among other things, this method uses solution of a system of equations.
This is similar to the work of Dietz et. al. and 
brings up another aspect to our desired solution.

Desired solution
----------------

For simplicity of implementation and for elegance,
we want a scheme for quaternion curve design that is compatible with existing
software for curve design in lower dimensions.
Not only does this add to simplicity, it also 
means that all methods of point interpolation, from Bezier
to Hermite to whatever your favourite method is, can be inherited.
Let's get into details.

Removing the constraint
-----------------------

The difficulty of curve definition on surfaces is the constraint
to the surface.
In traditional interpolation,
the curve must only satisfy constraints at a finite number of points, 
not constantly remain on a surface.
This difficulty can be seen in Barr et. al. with their constrained
optimization, and many authors resort to nonrational slerping
(spherical linear interpolation) to constrain to the sphere.

The insight of Dietz et. al. is to REMOVE the constraint to the sphere.
We will map the quaternions off of the sphere and interpolate their
images freely.
The key to this process is the creation of a rational map onto the sphere,
whose inverse will map the quaternions off of the sphere.

Method (LOT OF TIME HERE)
------

Let M be the rational map from arbitrary point in 4-space
onto the quaternion sphere.
We first map the quaternions by M^{-1}.
(See picture)
Now interpolate these inverse images freely, using your favourite method.
Map the resulting curve back to the sphere using M.
And determine the Bezier polygon of this curve.

AUXILIARY PHOTOS TOO.

A few comments: 
1) Note that in step 2, only a finite number of points are mapped,
so M^{-1} need not be rational.
However, M must be rational, since we will
be mapping an entire curve in step 4, which we want to remain rational.

2) Notice that the interpolation in step 3 is traditional point interpolation,
just in 4-space rather than 3-space.
That is, your favourite method of interpolation can be used here,
and you can use all of your existing software for interpolation.

3) The choice of quaternion to represent an orientation is not completely
unique, you may choose a quaternion or its antipodal image on the quaternion
sphere.  
The choice is obvious from the context of nearby orientations,
which is almost alway true,
or arbitrary (that is, if the orientation changes by 180 degrees between
two frames, then spinning either way is OK).

4) We want to use traditional curve interpolation in step 3,
so we compute a unique preimage, unlike Dietz. et. al.

5) An interesting property of our map M is that it keeps points on the sphere.
We consider this an important property of the map.
That is, it maps to another set of points on the sphere.
The only difference is that the interpolation of these new points 
is not constrained to the sphere.


Results
-------

The changes in orientation generated by the quaternion curves constructed
by our method are very natural looking.
We have used this method to construct animations from keyframes
(see our paper in Graphics Interface '95).
There are methods to control the speed of change of orientation too.

Rational map onto quaternion sphere
-----------------------------------

We need a rational map onto the quaternion sphere.
Again, note that a nonrational map would be trivial (use normalization).
First, observe that a unit vector (a,b,c,d)
satisfies a^2 + b^2 + c^2 + d^2 = 1.
Or in projective space, a^2 + b^2 + c^2 + d^2 = e^2.
And we want to map to unit vectors.

Map to unit quaternion sphere
-----------------------------

There is an elegant formula in number theory, called Euler's formula,
and a special case of it also developed by Aida.
Notice its similarity to the unit vector in projective space.
So the Euler formula can be used to construct a rational map 
to the 3-sphere.
Note that its inverse maps points on S^3 to S^3.

Properties of M and its inverse
-------------------------------

SKIP

Control mesh
------------

For the Bezier control polygon of the quaternion curve, see the paper.
We transform the quaternion curve into rotation matrix format,
which is a degree 2 transformation.
Now we have rotation and translation matrices (and possibly scaling matrices),
which define a path for the sweeping object.
We finally build the tensor product Bezier control mesh of the swept surface.

There are many details in the translation of the rational
curves and surfaces to Bezier control point structure which are
dealt with in the paper and which we will not discuss here.

Degree of swept surface
-----------------------

What is the degree of this swept surface?
It depends on the amount of continuity desired in the sweep.
Consider C^2 continuity as an example,
and consider the degree of the orientation component, which dominates.
C^2 continuity requires cubic interpolating curves in free 4-space.
There are two quadratic maps after this, 
the map M onto the quaternion sphere and the map from quaternion
to rotation matrix, yielding degree 12.
Thus, the tensor product surface for a sweep with C^2 continuity
is degree (12,n), where n is the degree of the sweeping curve.
If lower continuity is sufficient, then the degree drops accordingly.
There is a formula in the paper.

Conclusions
-----------

To conclude, we have a new swept surface that models
the sweep of a curve.
Its main properties are that it preserves 
the shape of the sweeping curve and yet it also remains a rational
swept surface.
This guarantees consistency with the given data (the sweep curve
and its various positions) while remaining a tractable surface.

We have tried to make our work a natural progression from 
the interpolation of points to the interpolation of curves,
with the added issue of shape preservation that does not arise
in point interpolation.
Our rational interpolation of orientation
is a direct extension of point interpolation.

Future work
-----------

There are many interesting problems to pursue in this work.
I am very interested in the properties of the map M^{-1}.
In particular, since it maps from the sphere to the sphere,
it may be used as a texture map and I am working on this problem.

There is the question of whether there are other choices for the map M,
and/or the problem of proving our M optimal.

Obviously, there is the issue of sweeping surfaces instead of curves.
We can already *approximate*  the sweep of surfaces since the envelope
of a sweeping surface is the locus of intersection
*curves* of instantaneously close surfaces.
We believe that the way to approach sweeping surfaces is as
a sweeping curve with added restrictions to the sweep.

There is also the possibility that intersection with our swept
surfaces can be computed more efficiently, since the isoparametric
curves are all uniform.  

Acknowledgements
----------------

Examples on Video
-----------------

Start simply with a surface of revolution:
Coke bottle (but not defined in the conventional way that a surface
of revolution is)

Then a design example: 
A canoe (or gondola, tobacco leaf)

In both of these examples, the curve preserves its overall shape,
but is allowed to scale.
The last example shows a curve sweeping without changing size.


We now quickly review how we define our rational orientation curves.
1) Define orientations as unit quaternions.
2) Map by M^{-1}.
	Note that these are still on the sphere.
	Actually, there is a degree of freedom in the defn of the
	inverse image of the identity quaternion and in this
	example we have placed it off the sphere.

3) Interpolate freely.
4) Map back to sphere.

Thank you for your attention.

Questions
---------
Unique preimage of quaternion, rather than entire line.
In effect, we use projective space as a book-keeping tool.

Visualization of points in 4D: (--,--,0,--) --> (--,0,--,--) --> (--,--,0,--).

High degree: inevitable to have even degree curves on quaternion sphere.
The mapping to rotation matrix is degree 2 and you might look
there to improve the degree
