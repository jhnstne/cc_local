
# Test programs for finding quintic pyth. hodograph
# bezier curves

# P0,P1,P2,P3 will be quadratic bezier curves


read `genutils.maple`;
read `bezutils.maple`;

U := vector([u0,u1,u2]);
V := vector([v0,v1,v2]);
W := vector([w0,w1,w2]);


# XT, YT, ZT will be quintic bezier curves

XT := vector([x0,x1,x2,x3,x4,x5]);
YT := vector([y0,y1,y2,y3,y4,y5]);
ZT := vector([z0,z1,z2,z3,z4,z5]);


# compute the first derivatives of the primary curves

XTprime := bezdiff(XT,5);
YTprime := bezdiff(YT,5);
ZTprime := bezdiff(ZT,5);


# impose the restrictions

x1 := (scalarmul(bezproduct(U,2,V,2),2));
x2 := (scalarmul(bezproduct(U,2,W,2),2));
x3 := add(
	bezproduct(U,2,U,2),
	scalarmul(	
		add(bezproduct(V,2,V,2),bezproduct(W,2,W,2)),-1));

eqX := vector(5);
eqY := vector(5);
eqZ := vector(5);
eqall := vector(15);

for i from 1 to 5 do
	eqX[i] := (x1[i] - XTprime[i]);
	eqY[i] := (x2[i] - YTprime[i]);
	eqZ[i] := (x3[i] - ZTprime[i]);
	eqall[i] := eqX[i];
	eqall[i+5] := eqY[i];
	eqall[i+10] := eqZ[i];
od;

esys1 := {eqall[1],eqall[2],eqall[3],eqall[4],eqall[5],
	eqall[6],eqall[7],eqall[8],eqall[9],eqall[10],
	eqall[11],eqall[12],eqall[13],eqall[14],eqall[15]};

sys1 := {eqall[1],eqall[6],eqall[11]};
sys2 := {eqall[5],eqall[10],eqall[15]};
sys3 := {eqall[2]+eqall[3]+eqall[4],eqall[7]+eqall[8]+eqall[9],
	eqall[12]+eqall[13]+eqall[14]};




#subrules := {x0=0,y0=0,z0=0,x5=0,y5=0,z5=1,x1=0};

#subrules := {x0=0,y0=0,z0=0,x1=1,y1=1,z1=1,x4=0,y4=3,z4=2,x5=1,y5=4,z5=3};
#subrules := {x0=0,y0=0,z0=0};

#sys1a := subs(subrules,sys1);
#sys2a := subs(subrules,sys2);
#sys3a := subs(subrules,sys3);

#sol1 := solve(sys1a,{p10,p20,p30});
#sol2 := solve(sys2a,{p02,p12,p32});
#sol3 := solve(sys3a,{p01,p11,p21});

#pref1 := (allvalues(sol1,d)[1]);
#pref2 := (allvalues(sol2,d)[1]);
#all3  := allvalues(sol3,d);
#all31 := all3[1];
#all32 := all3[2];
#all33 := all3[3];
#all34 := all3[4];

#pref1a := subs(p00=0,pref1);
#pref2a := subs(p00=0,p22=0,pref2);
#all31a := subs(p00=0,p22=0,all31);
#all31b := (subs(pref1a,subs(pref2a,all31a)));
#all32a := subs(p00=0,all32);
#all32b := (subs(pref1a,subs(pref2a,all32a)));
#all33a := subs(p00=0,all33);
#all33b := (subs(pref1a,subs(pref2a,all33a)));
#all34a := subs(p00=0,all34);
#all34b := (subs(pref1a,subs(pref2a,all34a)));

quint_tex := proc()
writeto(`texout`);
for i from 1 to 5 do
	latex(eqX[i]);
od;


for i from 1 to 5 do
	latex(eqY[i]);
od;


for i from 1 to 5 do
	latex(eqZ[i]);
od;

writeto(terminal);

end;



svars := {x2,y2,z2,x3,y3,z3,p10,p11,p12,p20,p21,p22,p30,p31,p32};




